name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      ECR_FRONTEND_REPO: ${{ secrets.ECR_FRONTEND_REPO }}
      ECR_BACKEND_REPO: ${{ secrets.ECR_BACKEND_REPO }}
      EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Set SHORT_SHA from github.sha
      run: echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ env.DOCKERHUB_USERNAME }}
        password: ${{ env.DOCKERHUB_PASSWORD }}

    - name: Build and push frontend to Docker Hub
      run: |
        docker build -t $DOCKERHUB_USERNAME/goblog-frontend:$SHORT_SHA ./client
        docker push $DOCKERHUB_USERNAME/goblog-frontend:$SHORT_SHA

    - name: Build and push backend to Docker Hub
      run: |
        docker build -t $DOCKERHUB_USERNAME/goblog-backend:$SHORT_SHA ./server
        docker push $DOCKERHUB_USERNAME/goblog-backend:$SHORT_SHA

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Log in to Amazon ECR
      run: |
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_FRONTEND_REPO
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_BACKEND_REPO

    - name: Tag and push frontend to ECR
      run: |
        docker tag $DOCKERHUB_USERNAME/goblog-frontend:$SHORT_SHA $ECR_FRONTEND_REPO:$SHORT_SHA
        docker push $ECR_FRONTEND_REPO:$SHORT_SHA

    - name: Tag and push backend to ECR
      run: |
        docker tag $DOCKERHUB_USERNAME/goblog-backend:$SHORT_SHA $ECR_BACKEND_REPO:$SHORT_SHA
        docker push $ECR_BACKEND_REPO:$SHORT_SHA

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --region $AWS_REGION --name $EKS_CLUSTER_NAME

    - name: Show full frontend deployment YAML
      run: cat client/k8s/frontend-deployment.yaml

    - name: Show directory tree
      run: |
        echo "Current working directory:"
        pwd
        echo "Directory structure:"
        find . -type f

    - name: Deploy frontend to EKS
      run: |
          echo "Replacing with image: ${ECR_FRONTEND_REPO}:${SHORT_SHA}"

          echo "Before:"
          grep 'image:' client/k8s/frontend-deployment.yaml || echo "No image line found"

          sed -i.bak "s|image: .*|image: ${ECR_FRONTEND_REPO}:${SHORT_SHA}|g" client/k8s/frontend-deployment.yaml

          echo "After:"
          grep 'image:' client/k8s/frontend-deployment.yaml || echo "No image line found"

          kubectl apply -f client/k8s/frontend-deployment.yaml


    - name: Deploy backend to EKS
      run: |
        sed -i "s|.*image: .*|          image: $ECR_BACKEND_REPO:$SHORT_SHA|" server/k8s/backend-deployment.yaml
        kubectl apply -f server/k8s/backend-deployment.yaml